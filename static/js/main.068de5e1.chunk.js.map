{"version":3,"sources":["Components/ErrorBoundry.js","Components/Cardlist.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundry","props","state","hasErrorrror","error","info","this","setState","hasError","children","Component","Cardlist","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onSearchChange","e","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAqBeA,G,wDAlBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,cAAc,GAHH,E,8DAODC,EAAMC,GACpBC,KAAKC,SAAS,CAAEC,UAAS,M,+BAGzB,OAAIF,KAAKJ,MAAMM,SACJ,2DAEJF,KAAKL,MAAMQ,a,GAfCC,cCwBZC,EAvBE,SAAC,GAAe,EAAbC,OAEZ,MAAM,IAAIC,MAAM,UCaTC,EAdG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCAXK,EATA,SAACpB,GACZ,OACI,qBACAqB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SADhE,SAEKxB,EAAMQ,YC8CJiB,E,kDAzCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKrB,SAAS,CAACQ,YAAaa,EAAEC,OAAOC,SAZrC,EAAK5B,MAAQ,CACXU,OAAQ,GACRG,YAAY,IAJF,E,gEAQO,IAAD,OAClBgB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAK5B,SAAS,CAAEK,OAAQuB,S,+BAMjC,IAAD,EACyB7B,KAAKJ,MAA7BU,EADD,EACCA,OAAQG,EADT,EACSA,YACVqB,EAAiBxB,EAAOyB,QAAO,SAAAC,GACnC,OAAOA,EAAMC,KAAKC,cAAcC,SAAS1B,EAAYyB,kBAEzD,OAAQ5B,EAAO8B,OAGT,sBAAKzB,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAcV,KAAKqB,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUf,OAAQwB,WAPzB,gD,GAxBW1B,aCEHiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDX,M","file":"static/js/main.068de5e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasErrorrror: false\n        }\n    }\n\n    componentDidCatch(error,info) {\n        this.setState({ hasError:true})\n    }\n    render() {\n        if (this.state.hasError) {\n            return <h1> Ooops. That is not good.</h1>\n        } \n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({ robots }) => {\n    if(true) {\n        throw new Error('Noooo');\n    }\n    return(\n        <div>\n            {\n            robots.map((user,i) => {\n                return (\n                    < Card \n                    key={i} \n                    id= {robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email} \n                    /> \n                );\n            })\n        }\n        </div>\n    );\n}\n\n\nexport default Cardlist;","import React from 'react';\n\n\n\nconst SearchBox = ({ searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}\n           />\n            \n        </div> \n    );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div \n        style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport './App.css';\nimport ErrorBoundry from '../Components/ErrorBoundry';\n\nimport Cardlist from '../Components/Cardlist';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll'; \n\n\n\nclass App extends Component { \n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield:''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => this.setState({ robots: users}));   \n  }\n  onSearchChange = (e) => {\n    this.setState({searchfield: e.target.value}) \n  }\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n  return !robots.length ? \n       <h1>loading...</h1> :\n      (\n        <div className='tc'>\n          <h1 className='f1'>RobotBuddies</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <Cardlist robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>  \n        </div>     \n      );\n    }\n   }  \n  \n  \n\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}